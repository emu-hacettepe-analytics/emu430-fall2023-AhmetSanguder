install.packages("dslabs")
library(dslabs)
# Load the "na_example" dataset
data("na_example")
library(dslabs)
data("na_example")
force(na_example)
library(dslabs)
data("na_example")
print(na_example)
number_of_na <- 0
for (i in 1:1000) {
if (i <- NA) {
number_of_na <- number_of_na+1
}
}
print(number_of_na)
library(dslabs)
data("na_example")
print(na_example)
number_of_na <- 0
for (i in 1:1000) {
library(dslabs)
data("na_example")
print(na_example)
number_of_na <- 0
for (i in 1:1000) {
if (is.na <- TRUE) {
number_of_na <- number_of_na+1
}
}
print(number_of_na)
number_of_na <- number_of_na+1
}
library(dslabs)
data("na_example")
print(na_example)
number_of_na <- 0
for (i in 1:1000) {
library(dslabs)
data("na_example")
print(na_example)
number_of_na <- 0
for (i in 1:1000) {
if (is.na == TRUE) {
number_of_na <- number_of_na+1
}
}
print(number_of_na)
number_of_na <- number_of_na+1
}
library(dslabs)
data("na_example")
print(na_example)
total_na <- sum(is.na(na_example))
print(total_na)
library(dslabs)
data("na_example")
total_na <- sum(is.na(na_example))
print(total_na)
na_example[is.na(na_example)] <- 0
print(na_example)
# Install and load required packages
install.packages("dslabs")
library(dslabs)
# Load the na_example dataset
data("na_example")
# Show the content of na_example dataset along with NA values
print(na_example)
print(is.na(na_example))
# Calculate the total number of NA values
total_na <- sum(is.na(na_example))
cat("Total number of NA values in na_example dataset:", total_na, "\n")
# Replace all NA values with 0 and store it as a new object
na_example_no_na <- na_example  # Create a copy to preserve the original
na_example_no_na[is.na(na_example_no_na)] <- 0  # Replace NAs with 0
# Display the new data frame without NA values
print(na_example_no_na)
# Calculate the total number of NA values in the new data frame
total_na_new <- sum(is.na(na_example_no_na))
cat("Total number of NA values in the new data frame:", total_na_new, "\n")
library(dslabs)
# Load the na_example dataset
data("na_example")
# Show the content of na_example dataset along with NA values
print(na_example)
print(is.na(na_example))
# Calculate the total number of NA values
total_na <- sum(is.na(na_example))
cat("Total number of NA values in na_example dataset:", total_na, "\n")
# Replace all NA values with 0 and store it as a new object
na_example_no_na <- na_example  # Create a copy to preserve the original
na_example_no_na[is.na(na_example_no_na)] <- 0  # Replace NAs with 0
# Display the new data frame without NA values
print(na_example_no_na)
# Calculate the total number of NA values in the new data frame
total_na_new <- sum(is.na(na_example_no_na))
cat("Total number of NA values in the new data frame:", total_na_new, "\n")
library(dslabs)
# Load the na_example dataset
data("na_example")
# Show the content of na_example dataset along with NA values
print(na_example)
print(is.na(na_example))
# Calculate the total number of NA values
total_na <- sum(is.na(na_example))
cat("Total number of NA values in na_example dataset:", total_na, "\n")
# Replace all NA values with 0 and store it as a new object
na_example_no_na <- na_example  # Create a copy to preserve the original
na_example_no_na[is.na(na_example_no_na)] <- 0  # Replace NAs with 0
# Display the new data frame without NA values
print(na_example_no_na)
# Calculate the total number of NA values in the new data frame
total_na_new <- sum(is.na(na_example_no_na))
cat("Total number of NA values in the new data frame:", total_na_new, "\n")
total_na <- sum(is.na(na_example))
print(total_na)
na_example[is.na(na_example)] <- 0
```
library(dslabs)
data("na_example")
print(na_example)
number_of_na <- sum(is.na(na_example))
print(number_of_na)
na_example[is.na(na_example)] <- 0
library(dslabs)
data("na_example")
print(na_example)
number_of_na <- sum(is.na(na_example))
print(number_of_na)
new_na_example <- na_example
na_example[is.na(na_example)] <- 0
print(new_na_example)
library(dslabs)
data("na_example")
print(na_example)
number_of_na <- sum(is.na(na_example))
print(number_of_na)
new_na_example <- na_example
na_example[is.na(na_example)] <- 0
print(na_example)
library(dslabs)
data("na_example")
print(na_example)
number_of_na <- sum(is.na(na_example))
print(number_of_na)
new_na_example <- na_example
na_example[is.na(na_example)] <- 0
print(na_example)
sum(is.na(na_example))
print(na_example)
library(dslabs)
data("na_example")
print(na_example)
number_of_na <- sum(is.na(na_example))
print(number_of_na)
new_na_example <- na_example
na_example[is.na(na_example)] <- 0
print(na_example)
print(sum(is.na(na_example)))
library(dslabs)
data("na_example")
print(na_example)
number_of_na <- sum(is.na(na_example))
print(number_of_na)
new_na_example <- na_example
na_example[is.na(na_example)] <- 0
print(na_example)
print(sum(is.na(na_example)))
v <- c('a', 'b', 'c', 'd', 'e')
print(v[1])
library(tidyverse)
install.packages("tidyverse", type="source")
install.packages("tidyverse", type="source")
install.packages("tidyverse", type="sour
library(tidyverse)
library(rvest)
library(stringr)
library(knitr)
data_html <- read_html(url[1])
title_names <- data_html |> html_nodes('.ipc-title__text')
title_names <- html_text(title_names)
title_names <- tail(head(title_names,-1),-1)
title_names <- str_split(title_names, " ", n=2)
title_names <- unlist(lapply(title_names, function(x) {x[2]}))
```{r}
install.packages("rvest", type="source")
```{r}
library(tidyverse)
library(rvest)
library(stringr)
library(knitr)
data_html <- read_html(url[1])
url <- c("https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&sort=user_rating,desc&num_votes=2500,&country_of_origin=TR&count=250","https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&sort=user_rating,desc&num_votes=2500,&country_of_origin=TR&count=250")
library(tidyverse)
library(rvest)
library(stringr)
library(knitr)
data_html <- read_html(url[1])
title_names <- data_html |> html_nodes('.ipc-title__text')
title_names <- html_text(title_names)
title_names <- tail(head(title_names,-1),-1)
title_names <- str_split(title_names, " ", n=2)
title_names <- unlist(lapply(title_names, function(x) {x[2]}))
